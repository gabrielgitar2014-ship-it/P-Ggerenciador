// src/disparador.ts

import dotenv from 'dotenv';
import twilio from 'twilio';

// --- CONFIGURA√á√ÉO INICIAL ---
dotenv.config();

const accountSid = process.env.TWILIO_ACCOUNT_SID;
const authToken = process.env.TWILIO_AUTH_TOKEN;
const twilioClient = twilio(accountSid, authToken);
const BOT_NUMBER = process.env.TWILIO_WHATSAPP_NUMBER;

// --- SIMULA√á√ÉO DA L√ìGICA DO SEU APLICATIVO ---

/**
 * Busca todos os usu√°rios que devem receber a notifica√ß√£o.
 * @returns Uma lista de usu√°rios com nome e telefone.
 */
async function getActiveUsers(): Promise<{ name: string; phone: string; }[]> {
    console.log("Buscando todos os usu√°rios ativos...");
    // L√ìGICA REAL AQUI: 
    // Ex: return await prisma.user.findMany({ where: { wantsNotifications: true } });
    return [
        { name: "Alice", phone: "whatsapp:+5581999999999" }, // Substitua por n√∫meros reais
        { name: "Beto", phone: "whatsapp:+5581888888888" }, // para teste
        // ... mais usu√°rios
    ];
}

/**
 * Este √© o seu "parse pronto". Ele gera uma mensagem personalizada para cada usu√°rio.
 * @param user - O objeto do usu√°rio.
 * @returns A string da mensagem personalizada.
 */
function createPersonalizedMessage(user: { name: string; phone: string; }): string {
    // Aqui voc√™ pode buscar dados financeiros reais do usu√°rio para o m√™s.
    const expenses = 3450.00;
    const message = `Ol√°, ${user.name}! üåü\n\nSeu resumo financeiro de Setembro chegou!\n\nVoc√™ gastou *R$ ${expenses.toFixed(2)}* este m√™s. Acesse o app para ver todos os detalhes e planejar Outubro! üí∞\n\nAbra√ßos,\nSeu App Financeiro.`;
    return message;
}

/**
 * Fun√ß√£o principal que orquestra o disparo em massa.
 */
async function sendBulkMessages() {
    console.log("Iniciando o disparo de mensagens em massa...");
    const users = await getActiveUsers();
    console.log(`Encontrados ${users.length} usu√°rios para notificar.`);

    for (const user of users) {
        const message = createPersonalizedMessage(user);
        
        try {
            await twilioClient.messages.create({
                from: BOT_NUMBER!,
                to: user.phone,
                body: message,
            });
            console.log(`Mensagem enviada com sucesso para ${user.name} (${user.phone})`);
        } catch (error: any) {
            console.error(`Falha ao enviar para ${user.name}: ${error.message}`);
        }

        // IMPORTANTE: Adiciona um atraso para evitar ser bloqueado pelo WhatsApp.
        // 1 segundo de atraso entre cada mensagem. Ajuste conforme necess√°rio.
        await new Promise(resolve => setTimeout(resolve, 1000));
    }

    console.log("Disparo de mensagens em massa conclu√≠do.");
}

// --- EXECU√á√ÉO DO SCRIPT ---
sendBulkMessages();